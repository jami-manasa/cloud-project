drop table "ss".eks_nodegroups;
CREATE TABLE "ss".eks_nodegroups (
	cluster_arn               varchar(100),
	node_group_arn            varchar(150),
	node_group_name           varchar(40),
	autoScaling_groups_name   varchar(150),
	node_group_status         varchar(10),
	node_group_min_size       varchar(5),
	node_group_max_size       varchar(5),
	node_group_desired_size   varchar(5),
    os                        varchar(20),
    hourly_price              varchar(40),
	account_id                varchar(40),
	account_name              varchar(40),
    region                    varchar(40),
    tag_value_1               varchar(40),
    tag_value_2               varchar(40),
    tag_value_3               varchar(40),
    tag_value_4               varchar(40),
	nodegroup_instancetypes   varchar(500),
	nodegroup_capacityType    varchar(40),
	nodegroup_diskSize        varchar(40),
	nodegroup_health_issues   varchar(500) ,
    mon_scaleout_time         varchar(40),
    mon_scaleout_count        int,
    mon_scalein_time          varchar(40),
    mon_scalein_count         int,
    tue_scaleout_time         varchar(40),
    tue_scaleout_count        int,
    tue_scalein_time          varchar(40),
    tue_scalein_count         int,
    wed_scaleout_time         varchar(40),
    wed_scaleout_count        int,
    wed_scalein_time          varchar(40),
    wed_scalein_count         int,
    thu_scaleout_time         varchar(40),
    thu_scaleout_count        int,
    thu_scalein_time          varchar(40),
    thu_scalein_count         int,
    fri_scaleout_time         varchar(40),
    fri_scaleout_count        int,
    fri_scalein_time          varchar(40),
    fri_scalein_count         int,
    sat_scaleout_time         varchar(40),
    sat_scaleout_count        int,
    sat_scalein_time          varchar(40),
    sat_scalein_count         int,
    sun_scaleout_time         varchar(40),
    sun_scaleout_count        int,
    sun_scalein_time          varchar(40),
    sun_scalein_count         int,
	PRIMARY KEY(node_group_arn),
	CONSTRAINT fk_cluster_arn
	FOREIGN KEY(cluster_arn)
	REFERENCES ss.eks_cluster(cluster_arn)
	ON DELETE CASCADE
)